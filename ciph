#!/bin/bash

root="$HOME"
sec_dir="${2:-sec}"
sec_tar=".${sec_dir}.tar.gz"
sec_gpg="${sec_tar}.gpg"

# force gpg to use the ncurses pinentry
unset DISPLAY

cd "${root}"

rm_tar () {
	srm "${sec_tar}" &
}

if [[ $1 == "e" ]] ; then
	tar -czf "${sec_tar}" "${sec_dir}" &&
		gpg -e -r evan "${sec_tar}" &&
		srm "${sec_tar}"
elif [[ $1 == "d" ]] ; then
	gpg "${sec_gpg}" &&
		tar -xzf "${sec_tar}" &&
		rm_tar
elif [[ $1 == "c" ]] ; then
	if [[ -d ${sec_dir} ]] ; then
		echo "Removing ${sec_dir}/..."
		srm -rf "${sec_dir}"
	fi
	if [[ -f ${sec_tar} ]] ; then
		echo "Removing ${sec_tar}..."
		srm "${sec_tar}"
	fi
elif [[ $1 == "l" ]] ; then
	gpg "${sec_gpg}" &&
		tar -tzf "${sec_tar}" &&
		rm_tar
elif [[ $1 == "i" ]] ; then
	[[ -d ${sec_dir} ]] && echo "Warning: unencrypted data at ${sec_dir}/ exists."
	[[ -f ${sec_tar} ]] && echo "Warning: unencrypted data at ${sec_tar}/ exists."
	[[ -f ${sec_gpg} ]] && echo "Info: ${sec_gpg} exists."
else
	echo "Invalid argument."
	exit 1
fi
