#!/bin/sh
# syscall lookup
# by paraxor

# override with -a
abi=`uname -m`
# override with -t
table_style=false

die() {
	echo >&2 "FATAL: $*"
	exit 1
}

while [ $# != 0 ] ; do
	case "$1" in
		-a)
			abi=$2
			shift
			;;
		-f)
			file=$2
			shift
			;;
		-t)
			table_style=true
			;;
		*)
			lookup=$1
			;;
	esac
	shift
done

[ -z "$lookup" ] && die 'do you like apples?'

if [ $abi == x86_64 ] ; then
	arch=64
	macros='__SYSCALL_COMMON\|__SYSCALL_64'
elif [ $abi == x32 ] ; then
	arch=64
	macros='__SYSCALL_COMMON\|__SYSCALL_X32'
else
	arch=32
	macros='__SYSCALL_I386'
fi

[ -z "$file" ] && file=/usr/lib/modules/`uname -r`/build/arch/x86/include/generated/asm/syscalls_$arch.h
[ -r "$file" ] || die "could not read '$file'"

$table_style && echo -n "$lookup "
if echo "$lookup" | grep -q '^[0-9]\+$' ; then
	sed -n "/^\($macros\)($lookup,/{ s/^[^ ]\+ //; s/,.*//; p }" "$file"
else
	sed -n "/^\($macros\)([^,]\+, $lookup,/{ s/^[^(]\+(//; s/,.*//; p }" "$file"
fi
